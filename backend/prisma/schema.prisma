datasource db { 
  provider = "postgresql"
  url      = env("DATABASE_URL") 
}

generator client { 
  provider = "prisma-client-js" 
}

model User {
  id           String        @id @default(cuid())
  email        String        @unique
  xp           Int           @default(0)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  progress     Progress[]
  certificates Certificate[]
  attempts     Attempt[]
  sessions     Session[]
}

model Module {
  id          String     @id @default(cuid())
  topic       String
  levelReqXP  Int        @default(0)
  maxLevel    Int        @default(10)
  moduleType  String     @default("standard") // "weekly", "standard", "advanced"
  createdAt   DateTime   @default(now())
  progress    Progress[]
  attempts    Attempt[]
}

model Progress {
  id          String   @id @default(cuid())
  userId      String
  moduleId    String
  level       Int      @default(1)
  finished    Boolean  @default(false)
  deadlineIso String?  // ISO Timestamp
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  module      Module   @relation(fields: [moduleId], references: [id])
  
  @@unique([userId, moduleId])
}

model Attempt {
  id          String   @id @default(cuid())
  userId      String
  moduleId    String
  questionId  Int
  questionType String @default("default") // "default", "risk", "team"
  isCorrect   Boolean
  duration    Int?     // in seconds
  createdAt   DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id])
  module      Module   @relation(fields: [moduleId], references: [id])
}

model Certificate {
  id        String   @id @default(cuid())
  userId    String
  topic     String
  tier      String   @default("bronze") // "bronze", "silver", "gold"
  issuedAt  DateTime @default(now())
  hash      String
  user      User     @relation(fields: [userId], references: [id])
}

model Session {
  id        String   @id @default(cuid())
  userId    String
  sessionId String   @unique
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Team {
  id          String       @id @default(cuid())
  name        String       @unique
  successRate Float        @default(0.0)
  createdAt   DateTime     @default(now())
  members     TeamMember[]
}

model TeamMember {
  id     String @id @default(cuid())
  userId String
  teamId String
  role   String @default("member") // "member", "leader"
  team   Team   @relation(fields: [teamId], references: [id])
  
  @@unique([userId, teamId])
}

model AuditLog {
  id        String   @id @default(cuid())
  userId    String?
  action    String
  resource  String?
  details   String?  // JSON
  ipAddress String?
  userAgent String?
  createdAt DateTime @default(now())
} 